{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/contacts/AddContact1.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/EditContact.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props","name","email","phone","className","onClick","style","cursor","fontFamily","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","AddContact","onSubmit","e","preventDefault","_this$state","newContact","post","then","onChange","defineProperty","target","_this$state2","htmlFor","placeholder","Header","branding","href","defaultProps","About","NotFound","TextInputGroup","_ref","label","error","classnames","is-invalid","EditContact","errors","updContact","abrupt","match","params","put","history","push","layout_TextInputGroup","Test","title","body","fetch","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2SAIMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAGxC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GACRe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAJ5Ce,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EASsBC,IAAMC,IAAI,+CAThC,OASUN,EATVE,EAAAK,KAaI9B,KAAKY,SAAS,CAAEzB,SAAUoC,EAAIQ,OAblC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAiBI,OACEiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cAnBpBzC,EAAA,CAA8B0C,aAyBjBC,EAAW5D,EAAQ4D,iBCmCjBC,oNAtFbzD,MAAQ,CACN0D,iBAAiB,KAYnBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,IAAMc,OAAN,8CAAAlD,OAA2DF,IADnD,OAGdqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAH9B,wBAAAmC,EAAAO,SAAAV,sIAOP,IAAAqB,EAAA3C,KAAA4C,EAC4B5C,KAAKmC,MAAhC7C,EADDsD,EACCtD,GAAIuD,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBP,EAAoBxC,KAAKlB,MAAzB0D,gBAER,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,uBACbf,EAAAb,EAAAc,cAAA,UACGW,EAAM,IACPZ,EAAAb,EAAAc,cAAA,KACEe,QAAS,kBACPN,EAAK/B,SAAS,CACZ4B,iBAAkBG,EAAK7D,MAAM0D,mBAGjCQ,UAAU,mBACVE,MAAO,CAAEC,OAAQ,UAAWC,WAAY,iBAE1CnB,EAAAb,EAAAc,cAAA,KACEc,UAAU,eACVE,MAAO,CACLC,OAAQ,UACRE,MAAO,QACPC,MAAO,MACPF,WAAY,eAEdH,QAASN,EAAKF,cAAcc,KAAKZ,EAAMrD,EAAIqB,KAE7CsB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAE,gBAAAjE,OAAkBF,IACxB2C,EAAAb,EAAAc,cAAA,KACEc,UAAU,gBACVE,MAAO,CACLC,OAAQ,UACRE,MAAO,QACPC,MAAO,QACPI,YAAa,OACbN,WAAY,mBAKnBZ,EACCP,EAAAb,EAAAc,cAAA,MAAIc,UAAU,cACZf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCF,GACxCb,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCD,IAExC,eAtEIV,cCoDPsB,mLAxCX,OACE1B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACE8C,EAAAb,EAAAc,cAAAD,EAAAb,EAAAwC,SAAA,KACGzE,EAASO,IAAI,SAAAL,GAAO,OAEnB4C,EAAAb,EAAAc,cAAC2B,EAAD,CACE9C,IAAK1B,EAAQC,GACbA,GAAID,EAAQC,GACZuD,KAAMxD,EAAQwD,KACdC,MAAOzD,EAAQyD,MACfC,MAAO1D,EAAQ0D,oBA7BVV,qCC4FRyB,6MA3FbhF,MAAQ,CACN+D,KAAM,GACNC,MAAO,GACPC,MAAO,MAGTgB,SAAW,SAACpD,EAAUqD,GACpBA,EAAEC,iBADwB,IAAAC,EAEKpE,EAAKhB,MAC9BqF,EAAa,CACjBtB,KAJwBqB,EAElBrB,KAGNC,MALwBoB,EAEZpB,MAIZC,MANwBmB,EAELnB,OAOrBnB,IACGwC,KAAK,8CAA+CD,GACpDE,KAAK,SAAA9C,GAAG,OAAIZ,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,SAE5DjC,EAAKc,SAAS,CAEZiC,KAAM,GACNC,MAAO,GACPC,MAAO,QAIXuB,SAAW,SAAAN,GAAC,OAAIlE,EAAKc,SAAL3B,OAAAsF,EAAA,EAAAtF,CAAA,GAAiB+E,EAAEQ,OAAO3B,KAAOmB,EAAEQ,OAAOxD,iFAIjD,IAAA2B,EAAA3C,KAAAyE,EACwBzE,KAAKlB,MAA5B+D,EADD4B,EACC5B,KAAMC,EADP2B,EACO3B,MAAOC,EADd0B,EACc1B,MAErB,OACEd,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,eACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,QAAM6B,SAAUpB,EAAKoB,SAASR,KAAKZ,EAAMhC,IACvCsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,cACbf,EAAAb,EAAAc,cAAA,SAAOwC,QAAQ,QAAf,QACAzC,EAAAb,EAAAc,cAAA,SACElD,KAAK,OACL6D,KAAK,OACLG,UAAU,+BACV2B,YAAY,aACZ3D,MAAO6B,EACPyB,SAAU3B,EAAK2B,YAGnBrC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,cACbf,EAAAb,EAAAc,cAAA,SAAOwC,QAAQ,SAAf,SACAzC,EAAAb,EAAAc,cAAA,SACElD,KAAK,QACL6D,KAAK,QACLG,UAAU,+BACV2B,YAAY,cACZ3D,MAAO8B,EACPwB,SAAU3B,EAAK2B,YAGnBrC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,cACbf,EAAAb,EAAAc,cAAA,SAAOwC,QAAQ,SAAf,SACAzC,EAAAb,EAAAc,cAAA,SACElD,KAAK,OACL6D,KAAK,QACLG,UAAU,+BACV2B,YAAY,cACZ3D,MAAO+B,EACPuB,SAAU3B,EAAK2B,YAGnBrC,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,cACNgC,UAAU,wCAhFLX,aCAnBuC,EAAS,SAAAzC,GAAS,IACd0C,EAAa1C,EAAb0C,SACR,OACE5C,EAAAb,EAAAc,cAAA,OAAKc,UAAU,2DACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,KAAG4C,KAAK,IAAI9B,UAAU,gBACnB6B,GAEH5C,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,sBACZf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,IAAIT,UAAU,YACrBf,EAAAb,EAAAc,cAAA,KACEc,UAAU,cACVE,MAAO,CAAEE,WAAY,iBACpB,IAJL,SAQFnB,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,eAAeT,UAAU,YAChCf,EAAAb,EAAAc,cAAA,KACEc,UAAU,cACVE,MAAO,CAAEE,WAAY,iBACpB,IAJL,QAQFnB,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,SAAST,UAAU,YAC1Bf,EAAAb,EAAAc,cAAA,KACEc,UAAU,kBACVE,MAAO,CAAEE,WAAY,iBACpB,IAJL,eAedwB,EAAOG,aAAe,CACpBF,SAAU,UAOGD,QCtDAI,EAAA,WACb,OACE/C,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aAAd,yBACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,iCACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,kBAAb,mBCLSiC,EAAA,WACb,OACEhD,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aACZf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,OADF,mBAGAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,sDCJAkC,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAvC,EAMIsC,EANJtC,KACA7B,EAKImE,EALJnE,MACA2D,EAIIQ,EAJJR,YACA3F,EAGImG,EAHJnG,KACAsF,EAEIa,EAFJb,SACAe,EACIF,EADJE,MAEA,OACEpD,EAAAb,EAAAc,cAAA,OAAKc,UAAU,cACbf,EAAAb,EAAAc,cAAA,SAAOwC,QAAS7B,GAAOuC,GACvBnD,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACN6D,KAAMA,EACNG,UAAWsC,IAAW,+BAAgC,CACpDC,aAAcF,IAEhBV,YAAaA,EACb3D,MAAOA,EACPsD,SAAUA,IAEXe,GAASpD,EAAAb,EAAAc,cAAA,OAAKc,UAAU,oBAAoBqC,KAenDH,EAAeH,aAAe,CAC5B/F,KAAM,QAGOkG,QCoFAM,6MA3Hb1G,MAAQ,CACN+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACP0C,OAAQ,MAkBV1B,+CAAW,SAAAzC,EAAOX,EAAUqD,GAAjB,IAAAE,EAAArB,EAAAC,EAAAC,EAAA2C,EAAApG,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTqC,EAAEC,iBADOC,EAGsBpE,EAAKhB,MAA5B+D,EAHCqB,EAGDrB,KAAMC,EAHLoB,EAGKpB,MAAOC,EAHZmB,EAGYnB,MAGR,KAATF,EANK,CAAApB,EAAAE,KAAA,eAOP7B,EAAKc,SAAS,CAAE6E,OAAQ,CAAE5C,KAAM,sBAPzBpB,EAAAkE,OAAA,oBAWK,KAAV7C,EAXK,CAAArB,EAAAE,KAAA,eAYP7B,EAAKc,SAAS,CAAE6E,OAAQ,CAAE3C,MAAO,uBAZ1BrB,EAAAkE,OAAA,oBAgBK,KAAV5C,EAhBK,CAAAtB,EAAAE,KAAA,gBAiBP7B,EAAKc,SAAS,CAAE6E,OAAQ,CAAE1C,MAAO,uBAjB1BtB,EAAAkE,OAAA,yBAqBHD,EAAa,CACjB7C,OACAC,QACAC,SAGMzD,EAAOQ,EAAKqC,MAAMyD,MAAMC,OAAxBvG,GA3BCmC,EAAAE,KAAA,GA6BSC,IAAMkE,IAAN,8CAAAtG,OAC8BF,GAC9CoG,GA/BO,QA6BHnE,EA7BGE,EAAAK,KAkCTnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAGhDjC,EAAKc,SAAS,CACZiC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP0C,OAAQ,KAGV3F,EAAKqC,MAAM4D,QAAQC,KAAK,KA5Cf,yBAAAvE,EAAAO,SAAAV,gEA+CXgD,SAAW,SAAAN,GAAC,OAAIlE,EAAKc,SAAL3B,OAAAsF,EAAA,EAAAtF,CAAA,GAAiB+E,EAAEQ,OAAO3B,KAAOmB,EAAEQ,OAAOxD,qNA7DhD1B,EAAOU,KAAKmC,MAAMyD,MAAMC,OAAxBvG,YACUsC,IAAMC,IAAN,8CAAArC,OAC8BF,WAD1CiC,SAIAlC,EAAUkC,EAAIQ,KAEpB/B,KAAKY,SAAS,CACZiC,KAAMxD,EAAQwD,KACdC,MAAOzD,EAAQyD,MACfC,MAAO1D,EAAQ0D,2IAqDV,IAAAJ,EAAA3C,KAAAyE,EACgCzE,KAAKlB,MAApC+D,EADD4B,EACC5B,KAAMC,EADP2B,EACO3B,MAAOC,EADd0B,EACc1B,MAAO0C,EADrBhB,EACqBgB,OAE5B,OACExD,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,gBACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,QAAM6B,SAAUpB,EAAKoB,SAASR,KAAKZ,EAAMhC,IACvCsB,EAAAb,EAAAc,cAAC+D,EAAD,CACEb,MAAM,OACNvC,KAAK,OACL8B,YAAY,aACZ3D,MAAO6B,EACPyB,SAAU3B,EAAK2B,SACfe,MAAOI,EAAO5C,OAEhBZ,EAAAb,EAAAc,cAAC+D,EAAD,CACEb,MAAM,QACNvC,KAAK,QACL7D,KAAK,QACL2F,YAAY,cACZ3D,MAAO8B,EACPwB,SAAU3B,EAAK2B,SACfe,MAAOI,EAAO3C,QAEhBb,EAAAb,EAAAc,cAAC+D,EAAD,CACEb,MAAM,QACNvC,KAAK,QACL8B,YAAY,cACZ3D,MAAO+B,EACPuB,SAAU3B,EAAK2B,SACfe,MAAOI,EAAO1C,QAEhBd,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,iBACNgC,UAAU,wCAhHJX,aCmDX6D,6MArDbpH,MAAQ,CACNqH,MAAO,GACPC,KAAM,uFAGY,IAAAzD,EAAA3C,KAClBqG,MAAM,gDACHhC,KAAK,SAAAiC,GAAQ,OAAIA,EAASC,SAC1BlC,KAAK,SAAAtC,GAAI,OACRY,EAAK/B,SAAS,CACZuF,MAAOpE,EAAKoE,MACZC,KAAMrE,EAAKqE,0CA+BV,IAAAlC,EACiBlE,KAAKlB,MAArBqH,EADDjC,EACCiC,MAAOC,EADRlC,EACQkC,KACf,OACEnE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,UAAKiE,GACLlE,EAAAb,EAAAc,cAAA,SAAIkE,WAhDO/D,aC8DJmE,mLAtBX,OACEvE,EAAAb,EAAAc,cAACuE,EAAD,KACExE,EAAAb,EAAAc,cAACsB,EAAA,EAAD,KACEvB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,OACbf,EAAAb,EAAAc,cAACwE,EAAD,CAAQ7B,SAAS,oBACjB5C,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAACyE,EAAA,EAAD,KACE1E,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnD,IACjC1B,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWhD,IAC5C7B,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWtB,IACjDvD,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW9B,IACtC/C,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWZ,IACrCjE,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOG,UAAW7B,gBAvChB5C,aCHE0E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStB,MACvB,2DCbNuB,IAASC,OAAOnF,EAAAb,EAAAc,cAACmF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,KAAK,SAAAsD,GACjCA,EAAaC","file":"static/js/main.b641f4bc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import { stat } from \"fs\";\r\nimport axios from \"axios\";\r\n// import { async } from \"q\";\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users/\");\r\n    // fara async\r\n    // .then(res => this.setState({ contacts: res.data }));\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { async } from \"q\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: true\r\n  };\r\n\r\n  // onDeleteClick = (id, dispatch) => {\r\n  //   //pt a comunica cu backend\r\n  //   axios\r\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n  //     .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n\r\n  //   // this.props.deleteClickHandler();\r\n  // };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n\r\n    //   // this.props.deleteClickHandler();\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\", fontFamily: \"FontAwesome\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\",\r\n                    color: \"red\",\r\n                    fontFamily: \"FontAwesome\"\r\n                  }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                      fontFamily: \"FontAwesome\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  // id: PropTypes\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired\r\n  // contact:PropTypes.object.isRequired\r\n  // deleteClickHandler: PropTypes.func.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  // constructor() {\r\n  //   super();\r\n  // }\r\n\r\n  // deleteContact = id => {\r\n  //   const { contacts } = this.state;\r\n\r\n  //   const newContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n  //   this.setState({\r\n  //     contacts: newContacts\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <>\r\n              {contacts.map(contact => (\r\n                // <h1>{contact.name}</h1>\r\n                <Contact\r\n                  key={contact.id}\r\n                  id={contact.id}\r\n                  name={contact.name}\r\n                  email={contact.email}\r\n                  phone={contact.phone}\r\n                  // deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n    //const { contacts } = this.state;\r\n    // return (\r\n    //   <React.Fragment>\r\n    //     {contacts.map(contact => (\r\n    //       // <h1>{contact.name}</h1>\r\n    //       <Contact\r\n    //         key={contact.id}\r\n    //         name={contact.name}\r\n    //         email={contact.email}\r\n    //         phone={contact.phone}\r\n    //         deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n    //       />\r\n    //     ))}\r\n    //   </React.Fragment>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users/\", newContact)\r\n      .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n\r\n    this.setState({\r\n      //pt a se goli campurile dupa submit\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\"\r\n    });\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  // onNameChange = e => this.setState({ name: e.target.value });\r\n  // onEmailChange = e => this.setState({ email: e.target.value });\r\n  // onPhoneChange = e => this.setState({ phone: e.target.value });\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter name\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter email\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Enter phone\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i\r\n                  className=\"fas fa-home\"\r\n                  style={{ fontFamily: \"FontAwesome\" }}\r\n                />{\" \"}\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i\r\n                  className=\"fas fa-plus\"\r\n                  style={{ fontFamily: \"FontAwesome\" }}\r\n                />{\" \"}\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i\r\n                  className=\"fas fa-question\"\r\n                  style={{ fontFamily: \"FontAwesome\" }}\r\n                />{\" \"}\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  // componentWillMount() {\n  //   console.log('componentWillMount...');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate...');\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillReceiveProps...');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     test: 'something'\n  //   };\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log(' getSnapshotBeforeUpdate...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n// import Header from \"./components/layout/Header\";\nimport { Provider } from \"./context\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AddContact from \"./components/contacts/AddContact1\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Test from \"./components/test/Test\";\n// import { constants } from \"http2\";\nclass App extends Component {\n  render() {\n    // return a sigle parent element\n\n    // return React.createElement(\n    //   \"div\",\n    //   { className: \"App\" },\n    //   React.createElement(\"h1\", null, \"The App Component\")\n    // );\n\n    // const name = \"Bob\";\n    // const showHello = false;\n    // const showMath = true;\n    // const num1 = 40;\n    // const num2 = 23;\n\n    // let math;\n\n    // if (showMath) {\n    //   math = (\n    //     <h4>\n    //       {num1}+{num2}={num1 + num2}\n    //     </h4>\n    //   );\n    // } else {\n    //   math = null;\n    // }\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}